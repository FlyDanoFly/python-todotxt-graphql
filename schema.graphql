scalar Datetime

schema {
    query: Query
    mutation: Mutation
}

type Task {
    lineNumber: Int!
    fullText: String!
}

input Assertionific {
    modifiedBefore: Datetime!
}

type ModifiedAtResult {
    success: Boolean!
    errors: [String]
    modifiedAt: Datetime
}

type TaskResult {
    success: Boolean!
    errors: [String]
    modifiedAt: Datetime
    task: Task
}

type TasksResult {
    success: Boolean!
    errors: [String]
    modifiedAt: Datetime
    tasks: [Task]
}

type Query {
    getModifiedAt: ModifiedAtResult!
    listTasks(assertions: Assertionific): TasksResult!
    getTask(id: ID!, assertions: Assertionific): TaskResult!
}

type Mutation {
    commitAllTasks(lines: [String]!, assertions: Assertionific): TasksResult!
    createTask(title: String!, description: String!, created_at: String): TaskResult!
    updateTask(id: ID!, title: String, description: String): TaskResult!
    deleteTask(id: ID): TaskResult!
}